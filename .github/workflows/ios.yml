name: iOS sample autotests

on:
  # pull_request:
  #   branches: ['main']
  workflow_dispatch:
    inputs:
      device:
        description: 'Device type'
        required: true
        default: 'iPhone 15'
        type: choice
        options:
          - iPhone 16
          - iPhone 16 Plus
          - iPhone 16 Pro
          - iPhone 16 Pro Max
          - iPhone 15
          - iPhone 15 Plus
          - iPhone 15 Pro
          - iPhone 15 Pro Max
      ios_os:
        description: 'iOS version (e.g. 18.6)'
        type: string
        required: true
        default: '18.6'

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: [self-hosted, macOS, ARM64, qaguru]

    steps:
      - name: Get current environment
        run: env
      - name: Checkout
        uses: actions/checkout@v4
      - name: Commit message -> Job Summary
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            SHA="${{ github.event.pull_request.head.sha }}"
          else
            SHA="${{ github.sha }}"
          fi

          MSG="$(git show -s --format=%B "$SHA")"

          {
            echo "## Commit message"
            echo
            echo "\`\`\`"
            echo "$MSG"
            echo "\`\`\`"
          } >> "$GITHUB_STEP_SUMMARY"
      - name: Show simulators
        run: xcrun simctl list devices available
      - name: Pick simulator by Device + OS
        id: pick
        shell: bash
        run: |
          set -euo pipefail
          DEVICE_INPUT="${{ github.event.inputs.device }}"
          IOS_VER="${{ github.event.inputs.ios_os }}"

          FULL_NAME="${DEVICE_INPUT} (iOS ${IOS_VER})"

          LINE=$(xcrun simctl list devices "iOS ${IOS_VER}" | grep -E "^[[:space:]]*${DEVICE_INPUT} \(" | head -n1)
          if [[ -z "${LINE}" ]]; then
            echo "❌ Simulator '${DEVICE_INPUT} (iOS ${IOS_VER})' not found"
            exit 1
          fi

          UDID=$(echo "${LINE}" | awk -F '[()]' '{print $2}')

          echo "✅ Chosen: ${FULL_NAME}  UDID=${UDID}"
          echo "simulator_id=$UDID" >> "$GITHUB_OUTPUT"
      - name: Build iOS app
        run: SIMULATOR_ID="${{ steps.pick.outputs.simulator_id }}" fastlane ios app_build
      - name: Run all UI-tests
        run: SIMULATOR_ID="${{ steps.pick.outputs.simulator_id  }}" fastlane ios app_test
      - name: Save xcresult
        if: ${{ always() }}
        uses: actions/upload-artifact@v4.3.3
        with:
          name: 'Report'
          path: 'Report'
          retention-days: 15
